/**
 * Shared Constants for R3 Project
 * 
 * This file contains all configuration constants used across the R3 project.
 * It serves as the single source of truth for all non-secret configuration values.
 * 
 * IMPORTANT: 
 * - This file should ONLY contain non-sensitive configuration
 * - Secrets should remain in environment variables
 * - All hardcoded values in code should reference this file
 * - When values need to change, update them here
 */

// Environment names (match branch names for consistency)
export const ENVIRONMENTS = {
  DEVELOPMENT: 'dev',
  STAGING: 'stage',
  PRODUCTION: 'prod'
};

// Git branch names (standardized across all repos)
// Note: 'prod' branch is the main/production branch
export const BRANCHES = {
  DEVELOPMENT: 'dev',
  STAGING: 'stage',
  PRODUCTION: 'prod'
};

// Shopify store domains
export const DOMAINS = {
  SHOPIFY_STORE: 'sqqpyb-yq.myshopify.com',
  PRODUCTION: 'rthree.io',
  PRODUCTION_WWW: 'www.rthree.io',
  ALTERNATE_1: 'rapidriskreduction.com',
  ALTERNATE_2: 'shop.rapidriskreduction.com'
};

// Shopify theme IDs
export const THEME_IDS = {
  DEVELOPMENT: 'development', // Special value for dev themes
  STAGING: '153047662834',
  PRODUCTION: '152848597234'
};

// Server ports
export const PORTS = {
  BACKEND: 3000,
  FRONTEND_DEV: 9292
};

// Backend deployment URLs
export const BACKEND_URLS = {
  PRODUCTION: 'https://r3-backend.vercel.app',
  STAGING: 'https://r3-backend-git-stage-r3.vercel.app',
  DEVELOPMENT: 'https://r3-backend-git-dev-r3.vercel.app',
  LOCAL: 'http://localhost:3000'
};

// API endpoint paths (relative to backend URL)
export const API_ENDPOINTS = {
  // Stripe
  CREATE_PAYMENT_INTENT: '/api/stripe/create-payment-intent',
  CREATE_CUSTOMER: '/api/stripe/create-customer',
  STRIPE_WEBHOOK: '/webhook/stripe',
  
  // Checkout
  CREATE_SESSION: '/api/checkout/session',
  GET_CSRF: '/api/checkout/csrf',
  
  // Shopify
  CREATE_ORDER: '/api/shopify/create-order',
  
  // Calculations
  CALCULATE_SHIPPING: '/api/calculate-shipping',
  CALCULATE_TAX: '/api/calculate-tax',
  
  // Health & Debug
  HEALTH: '/health',
  CHECK_ORDER_TYPE: '/api/debug/check-order-type',
  CIRCUIT_BREAKERS: '/api/circuit-breakers'
};

// Shopify API configuration
export const SHOPIFY_API = {
  VERSION: '2024-01',
  ENDPOINTS: {
    SHOP: '/admin/api/2024-01/shop.json',
    ORDERS: '/admin/api/2024-01/orders.json',
    DRAFT_ORDERS: '/admin/api/2024-01/draft_orders.json',
    CUSTOMERS: '/admin/api/2024-01/customers.json',
    PRODUCTS: '/admin/api/2024-01/products.json',
    INVENTORY: '/admin/api/2024-01/inventory_items.json'
  }
};

// Stripe public keys (safe to expose in frontend)
export const STRIPE_PUBLIC_KEYS = {
  TEST: 'pk_test_51QfuVo2MiCAheYVMBOUaLAoiI6ROiGeETTSMo2n6wz27euMLGlinvxg2dZcWaiH1QV8WcIdAjDxnxc3xV2GIL9GC00uJtwkzZL',
  LIVE: 'pk_live_51QfuVo2MiCAheYVMxmfB8eGf3OSMZRPvsH2dcFC579LoJTaSBYDiX78vuagKKjLZh0PN5ZIn4vvyilhbXZosV2tY00vPGMZQk8'
};

// Session configuration
export const SESSION = {
  TTL_MS: 1800000, // 30 minutes in milliseconds
  TTL_SECONDS: 1800, // 30 minutes in seconds
  COOKIE_NAME: 'r3-session',
  PREFIX: 'session:',
  FINGERPRINT_PREFIX: 'fingerprint:'
};

// Rate limiting configuration (production values)
export const RATE_LIMITS = {
  API: {
    WINDOW_MS: 900000, // 15 minutes
    MAX_REQUESTS: 100
  },
  SESSION: {
    WINDOW_MS: 900000, // 15 minutes
    MAX_REQUESTS: 20
  },
  PAYMENT: {
    WINDOW_MS: 300000, // 5 minutes
    MAX_REQUESTS: 30
  },
  WEBHOOK: {
    WINDOW_MS: 60000, // 1 minute
    MAX_REQUESTS: 100
  }
};

// Test configuration
export const TEST_CONFIG = {
  TIMEOUT: 30000,
  HEADLESS: true,
  RETRIES: 2,
  PARALLEL_TESTS: 4,
  
  // Test user data
  TEST_EMAIL: 'test@example.com',
  TEST_CARD_NUMBER: '4242424242424242',
  TEST_CARD_CVC: '123',
  TEST_CARD_ZIP: '10001',
  
  // Test ACH data
  TEST_ACH_ROUTING: '110000000',
  TEST_ACH_ACCOUNT: '000123456789'
};

// Feature flags
export const FEATURES = {
  // Payment methods
  STRIPE_ENABLED: true,
  ACH_ENABLED: true,
  PAYPAL_ENABLED: false,
  APPLE_PAY_ENABLED: false,
  GOOGLE_PAY_ENABLED: false,
  
  // UI features
  CART_DRAWER_ENABLED: true,
  QUICK_SHOP_ENABLED: true,
  PRODUCT_RECOMMENDATIONS_ENABLED: true,
  
  // Checkout features
  GUEST_CHECKOUT_ENABLED: true,
  EXPRESS_CHECKOUT_ENABLED: true,
  ORDER_NOTES_ENABLED: true,
  
  // Development features
  DEBUG_MODE_ENABLED: false,
  CONSOLE_LOGGING_ENABLED: false,
  HOT_RELOAD_ENABLED: true
};

// GitHub repository URLs
export const REPOSITORIES = {
  FRONTEND: 'https://github.com/dylanjshaw001/r3-frontend',
  BACKEND: 'https://github.com/dylanjshaw001/r3-backend',
  WORKSPACE: 'https://github.com/dylanjshaw001/r3-workspace'
};

// Vercel configuration
export const VERCEL = {
  API_URL: 'https://api.vercel.com',
  SCOPE: 'r3',
  ENDPOINTS: {
    PROJECTS: '/v9/projects',
    DEPLOYMENTS: '/v13/deployments',
    ENV_VARS: '/v10/projects/:projectId/env',
    DOMAINS: '/v5/projects/:projectId/domains'
  }
};

// External service URLs
export const EXTERNAL_SERVICES = {
  STRIPE_JS: 'https://js.stripe.com/v3/',
  PAYPAL_SDK: 'https://www.paypal.com/sdk/js',
  GOOGLE_PAY_JS: 'https://pay.google.com/gp/p/js/pay.js',
  SENDGRID_API: 'https://api.sendgrid.com/v3',
  TWILIO_API: 'https://api.twilio.com/2010-04-01',
  GOOGLE_ANALYTICS: 'https://www.google-analytics.com/collect',
  SEGMENT_API: 'https://api.segment.io/v1'
};

// Shipping configuration
export const SHIPPING = {
  ONEBOX: {
    UNIT_PRICE: 500, // $5.00 in cents
    CASE_PRICE: 2500, // $25.00 in cents
    UNITS_PER_CASE: 10
  },
  STANDARD: {
    PRICE: 0 // Free shipping
  }
};

// Order creation rules
export const ORDER_RULES = {
  // Create draft orders for:
  CREATE_DRAFT_FOR_TEST_ENV: true,
  CREATE_DRAFT_FOR_TEST_PAYMENT: true,
  CREATE_DRAFT_FOR_ACH: true,
  
  // Order tags
  TAGS: {
    TEST_ORDER: 'TEST_ORDER',
    ACH_PAYMENT: 'ACH_PAYMENT',
    ACH_PENDING: 'ACH_PENDING',
    ACH_COMPLETED: 'ACH_COMPLETED'
  }
};

// Performance targets
export const PERFORMANCE = {
  PAGE_LOAD_TARGET: 3000, // 3 seconds
  API_RESPONSE_TARGET: 500, // 500ms
  CHECKOUT_COMPLETION_TARGET: 30000, // 30 seconds
  CART_UPDATE_THROTTLE: 1500 // 1.5 seconds
};

// Monitoring URLs
export const MONITORING = {
  UPTIME_ROBOT: 'https://api.uptimerobot.com/v2',
  STATUS_PAGE: 'https://api.statuspage.io/v1'
};

/**
 * Helper Functions
 */

// Get environment from branch name
export function getEnvironmentFromBranch(branch) {
  const branchLower = branch?.toLowerCase();
  
  if (branchLower === BRANCHES.PRODUCTION || branchLower === BRANCHES.MAIN) {
    return ENVIRONMENTS.PRODUCTION;
  }
  if (branchLower === BRANCHES.STAGING) {
    return ENVIRONMENTS.STAGING;
  }
  if (branchLower === BRANCHES.DEVELOPMENT) {
    return ENVIRONMENTS.DEVELOPMENT;
  }
  
  // Default to development for unknown branches
  return ENVIRONMENTS.DEVELOPMENT;
}

// Get theme ID for environment
export function getThemeIdForEnvironment(env) {
  switch (env) {
    case ENVIRONMENTS.PRODUCTION:
      return THEME_IDS.PRODUCTION;
    case ENVIRONMENTS.STAGING:
      return THEME_IDS.STAGING;
    case ENVIRONMENTS.DEVELOPMENT:
    default:
      return THEME_IDS.DEVELOPMENT;
  }
}

// Get backend URL for environment
export function getBackendUrlForEnvironment(env) {
  switch (env) {
    case ENVIRONMENTS.PRODUCTION:
      return BACKEND_URLS.PRODUCTION;
    case ENVIRONMENTS.STAGING:
      return BACKEND_URLS.STAGING;
    case ENVIRONMENTS.DEVELOPMENT:
      return BACKEND_URLS.DEVELOPMENT;
    default:
      return BACKEND_URLS.LOCAL;
  }
}

// Get full API endpoint URL
export function getApiEndpointUrl(endpoint, env = ENVIRONMENTS.PRODUCTION) {
  const backendUrl = getBackendUrlForEnvironment(env);
  const endpointPath = API_ENDPOINTS[endpoint];
  
  if (!endpointPath) {
    throw new Error(`Unknown API endpoint: ${endpoint}`);
  }
  
  return `${backendUrl}${endpointPath}`;
}

// Get Shopify API URL
export function getShopifyApiUrl(domain, endpoint) {
  const baseUrl = `https://${domain}`;
  const endpointPath = SHOPIFY_API.ENDPOINTS[endpoint];
  
  if (!endpointPath) {
    throw new Error(`Unknown Shopify endpoint: ${endpoint}`);
  }
  
  return `${baseUrl}${endpointPath}`;
}

// Export default object for convenience
export default {
  ENVIRONMENTS,
  BRANCHES,
  DOMAINS,
  THEME_IDS,
  PORTS,
  BACKEND_URLS,
  API_ENDPOINTS,
  SHOPIFY_API,
  STRIPE_PUBLIC_KEYS,
  SESSION,
  RATE_LIMITS,
  TEST_CONFIG,
  FEATURES,
  REPOSITORIES,
  VERCEL,
  EXTERNAL_SERVICES,
  SHIPPING,
  ORDER_RULES,
  PERFORMANCE,
  MONITORING,
  
  // Helper functions
  getEnvironmentFromBranch,
  getThemeIdForEnvironment,
  getBackendUrlForEnvironment,
  getApiEndpointUrl,
  getShopifyApiUrl
};